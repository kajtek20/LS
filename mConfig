// characters starts a comment

data_file    =   RV_Ari.dat // file with data; first column time, second flux, third flux_error ... It has to contain at lest first two columns


T0 = 1870 // all points in time are reduced by this value
          // for numerical reasons should be close to the date of first observations but not exactly
          // if not given in config, is set to the floor from the first observation


//output
freq_file = freq11.dat // output file with found frequencies, amplitudes etc.
save_spectra = false  // save spectra to files - true or no false




//spectra settings
spec_mode_default = false //calculate with "proper" resolution up to ~Nyquist frequency
spec_res = 5e-5 // resolution of the calculated spectrum, only relevant if spec_mode_default =false
spec_high_freq = 60 //maximum frequency, only relevant if spec_mode_default =false




// noise parameters
noise_in_window = true // if true - noise is calculated within given window, if false noise is calculated from the whole spectrum
window_size = 1
StoN_criterion = 11.1 // only frequency peaks higher than StoN_criterion times noise are accepted



//fitting parameters
fit_all_freq = true // if false only last n values of found  frequencies are fitted (by default 1)
fit_n_last_freq = 1 // relevant if fit_all_freq = false




//remove spurious frequencies
remove_too_close = true  // true or false
remove_too_close_hard = false // if true exclude the range from /nu_m - remove_too_close_fac * Rayleigh resolution to /nu_m + remove_too_close_fac * Rayleigh resolution in the periodogram around each found m frequencies  when searching for new frequencies
remove_too_close_fac =2.5  // if two frequencies are closer than rem_too_close_fac times Rayleigh resolution (and rem_too_close=true), the one with smaller amplitude is removed



//parallelism
threads = 8 // how many cores to use (default 1)



// errors calculation
Czerny_err_corr = true // add frequency error correction by Schwarzenberg-Czerny 1991



// harmonics and combinations
set_exact_com_and_har = true // if true ask if set exact values of harmonics and combinations and do not fit them
har_range = 10 // max considered harmonic
com_2par_range = 10 //max absolute value for m and n in combinations m * nu_i + n * nu_j
com_3par_range = 3 //max absolute value for m and n and o in combinations m * nu_i + n * nu_j o * nu_k



allow_3_parents_v2=true // allow or not three parents in looking for combinations (only for marking combinations)
com_par_range_v2 = 10 // for overloaded function to search combinations and harmonics  (version which only mark combinations and harmonics)
                   // max absolute value for m and n in combinations m * nu_i + n * nu_j
                   // max absolute value for m and n and o in combinations m * nu_i + n * nu_j o * nu_k are com_par_range-2
har_range_v2 = 10 // max considered harmonic  for overloaded function to search combinations and harmonics
                  //(version which only mark combinations and harmonics)




// alternative solutions
try_n_highest_peaks = 5 // display n highest peaks, user chooses which one include to solution
set_try_n_highest_peaks_eq_1_after_found_n_freq = 20 //set try_n_highest_peaks equal to 1 after preweithen on n frequency
